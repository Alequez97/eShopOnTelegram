parameters:
  - name: environmentName
    displayName: Environment name
    type: string
    default: dev

pool:
  vmImage: ubuntu-latest

trigger:
  branches:
    include:
      - master

variables:
  - group: infrastructure-config
  - name: ADMIN_APP_LOCATION
    value: $(Build.SourcesDirectory)/src/eShopOnTelegram.Admin
  - name: SHOP_APP_LOCATION
    value: $(Build.SourcesDirectory)/src/eShopOnTelegram.Shop
  - name: DOTNET_VERSION
    value: 7.x
  - name: NODE_VERSION
    value: 18.x

stages:
  - stage: TerraformPlanAndApply${{parameters.environmentName}}
    displayName: Deploy azure infrastructure
    jobs:
      - script: | 
          cd $(Build.SourcesDirectory)
          ls

      # - template: ./templates/terraform-plan-and-apply.yml
      #   parameters: 
      #     Environment: ${{parameters.environmentName}}
      #     PipelineEnvironment: eshopontelegram-${{lower(parameters.environmentName)}}
      #     TfVarFile: "$(Build.SourcesDirectory)/infrastrucutre/terraform/vars/${{lower(parameters.environmentName)}}.tfvars"
      #     TfBackendStateFile: terraform-state-${{lower(parameters.environmentName)}}.tfstate
      #     SubscriptionId: $(azure-subsription-id)
      #     TfBackendResourceGroup:  $(terraform-backend-resource-group-name)
      #     TfBackendStorageAccountName: $(terraform-backend-storage-account-name)
      #     TfBackendContainerName: $(terraform-backend-blob-container-name)
      #     TfBackendAccessKey: $(terraform-backend-access-key)
      #     TfWorkingDirectory: $(Build.SourcesDirectory)/infrastrucutre/terraform
      #     TfOutputVars:
      #       - "resource_group_name"
      #       - "resource_group_location"
      #       - "admin_app_name"
      #       - "admin_app_hostname"
      #       - "shop_app_name"
      #       - "key_vault_uri"