parameters:
  - name: environmentName
    displayName: Environment name
    type: string
    default: dev
  - name: pipelineEnvironmentName
    displayName: Pipeline environment name
    type: string
    default: eshopontelegram-dev

pool:
  vmImage: ubuntu-latest

trigger:
  branches:
    include:
      - master

variables:
  - group: infrastructure-config
  - name: ADMIN_APP_LOCATION
    value: $(Build.SourcesDirectory)/src/eShopOnTelegram.Admin
  - name: ADMIN_APP_PROJECT_NAME
    value: eShopOnTelegram.Admin
  - name: SHOP_APP_LOCATION
    value: $(Build.SourcesDirectory)/src/eShopOnTelegram.Shop
  - name: SHOP_APP_PROJECT_NAME
    value: eShopOnTelegram.Shop
  - name: DOTNET_VERSION
    value: 7.x
  - name: NODE_VERSION
    value: 18.x

stages:
  - stage: TerraformPlanAndApply
    displayName: "[${{ parameters.environmentName }}] Deploy azure infrastructure"
    jobs:
      - template: ./templates/terraform-plan-and-apply.yml
        parameters: 
          Environment: ${{parameters.environmentName}}
          PipelineEnvironment: ${{ parameters.pipelineEnvironmentName }}
          TfVarFile: "$(Build.SourcesDirectory)/infrastructure/terraform/vars/${{lower(parameters.environmentName)}}.tfvars"
          TfBackendStateFile: terraform-state-${{lower(parameters.environmentName)}}.tfstate
          SubscriptionId: $(azure-subscription-id)
          TfBackendResourceGroup:  $(terraform-backend-resource-group-name)
          TfBackendStorageAccountName: $(terraform-backend-storage-account-name)
          TfBackendContainerName: $(terraform-backend-blob-container-name)
          TfBackendAccessKey: $(terraform-backend-access-key)
          TfWorkingDirectory: $(Build.SourcesDirectory)/infrastructure/terraform
          TfOutputVars:
            - "resource_group_name"
            - "resource_group_location"
            - "admin_app_name"
            - "admin_app_hostname"
            - "shop_app_name"
            - "key_vault_uri"
          
  - stage: BuildAndDeployAdmin
    dependsOn: ['TerraformPlanAndApply']
    variables:
      - name: AppName
        value: $[stageDependencies.TerraformPlanAndApply.terraform_apply.outputs['terraform_apply.tf_var_admin_app_name.admin_app_name']]
      - name: ResourceGroupName
        value: $[stageDependencies.TerraformPlanAndApply.terraform_apply.outputs['terraform_apply.tf_var_resource_group_name.resource_group_name']]
    displayName: "[${{ parameters.environmentName }}] Build and deploy admin app"
    jobs:
      - template: ./templates/dotnet-and-pnpm-client-build-and-deploy.yml
        parameters:
          webAppName: $(AppName)
          webAppResourceGroup: $(ResourceGroupName)
          dotnetVersion: ${{ variables.DOTNET_VERSION }}
          nodeVersion: ${{ variables.NODE_VERSION }}
          clientAppPath: ${{ variables.ADMIN_APP_LOCATION }}/ClientApp
          dotnetProjectPath: ${{ variables.ADMIN_APP_LOCATION }}
          dotnetProjectName: ${{ variables.ADMIN_APP_PROJECT_NAME }}

  - stage: BuildAndDeployShop
    dependsOn: ['TerraformPlanAndApply']
    variables:
      - name: AppName
        value: $[stageDependencies.TerraformPlanAndApply.terraform_apply.outputs['terraform_apply.tf_var_shop_app_name.shop_app_name']]
      - name: ResourceGroupName
        value: $[stageDependencies.TerraformPlanAndApply.terraform_apply.outputs['terraform_apply.tf_var_resource_group_name.resource_group_name']]
    displayName: "[${{ parameters.environmentName }}] Build and deploy shop app"
    jobs:
      - template: ./templates/dotnet-and-pnpm-client-build-and-deploy.yml
        parameters:
          webAppName: $(AppName)
          webAppResourceGroup: $(ResourceGroupName)
          dotnetVersion: ${{ variables.DOTNET_VERSION }}
          nodeVersion: ${{ variables.NODE_VERSION }}
          clientAppPath: ${{ variables.SHOP_APP_LOCATION }}/WebApp
          dotnetProjectPath: ${{ variables.SHOP_APP_LOCATION }}
          dotnetProjectName: ${{ variables.SHOP_APP_PROJECT_NAME }}