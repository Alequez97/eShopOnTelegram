parameters:
  - name: azureSubscription
  - name: webAppName
  - name: webAppResourceGroup
  - name: dotnetVersion
  - name: nodeVersion
  - name: clientAppPath
  - name: dotnetProjectPath
  - name: publishOutputPath
  - name: dependsOn
    default: ''

jobs:
  - job: build_and_deploy
    dependsOn: ${{parameters.dependsOn}}
    displayName: Build and deploy ${{ parameters.webAppName }}
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET ${{parameters.dotnetVersion}} SDK'
      inputs:
        version: ${{parameters.dotnetVersion}}
        performMultiLevelLookup: true

    - task: NodeTool@0
      displayName: 'Use NodeJS version ${{parameters.nodeVersion}} '
      inputs:
        versionSpec: ${{parameters.nodeVersion}}

    - script: npm install -g pnpm
      displayName: 'Install pnpm'

    - script: pnpm install
      workingDirectory: clientAppPath
      displayName: 'Install node modules'

    - task: DotNetCoreCLI@2
      displayName: 'Restore projects ${{parameters.dotnetProjectPath}}'
      inputs:
        projects: |
          ${{parameters.dotnetProjectPath}}
        command: 'restore'

    - task: DotNetCoreCLI@2
      displayName: 'Build publish artifacts ${{parameters.dotnetProjectPath}}'
      inputs:
        command: publish
        projects:  ${{parameters.dotnetProjectPath}}
        publishWebProjects: false
        arguments: '--no-restore --configuration ${{parameters.buildConfiguration}} --output ${{ parameters.publishOutputPath }}'
        zipAfterPublish: true

    - task: AzureWebApp@1
      displayName: Deploy app to azure
      inputs:
        appType: webApp
        azureSubscription: ${{ parameters.azureSubscription }} 
        appName: ${{ parameters.webApplicationName }}
        package: ${{ parameters.publishOutputPath }}
        resourceGroupName: ${{ parameters.webAppResourceGroup }}