parameters:
- name: Environment 
- name: TfVersion 
  default: 1.3.3 
- name: TfBackendResourceGroup 
- name: TfBackendStorageAccountName 
- name: TfBackendContainerName 
- name: TfBackendAccessKey 
- name: TfBackendStateFile 
- name: TfWorkingDirectory 
- name: TfOutputVars
  type: object
  default: ''

steps:
  - download: none
  - checkout: none
  - task: DownloadBuildArtifacts@0
    inputs:
      artifactName: "$(Build.BuildId)${{parameters.Environment}}-tfplan"
      displayName: "Download Plan Artifact"
  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: "$(System.ArtifactsDirectory)/$(Build.BuildId)${{parameters.Environment}}-tfplan/$(Build.BuildId)${{parameters.Environment}}.tgz"
      destinationFolder: "$(System.DefaultWorkingDirectory)/"
      cleanDestinationFolder: false
      overwriteExistingFiles: true
      displayName: "Extract Terraform Plan Artifact"
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
    displayName: "Install Terraform version ${{parameters.TfWorkingDirectory}}"
    inputs:
      terraformVersion: ${{parameters.TfVersion}}
  - task: CmdLine@2
    displayName: Terraform Init
    inputs:
      script: terraform init -backend-config=resource_group_name=${{parameters.TfBackendResourceGroup}} -backend-config="storage_account_name=${{parameters.TfBackendStorageAccountName}}" -backend-config="container_name=${{parameters.TfBackendContainerName}}" -backend-config="access_key=${{parameters.TfBackendAccessKey}}" -backend-config="key=${{parameters.TfBackendStateFile}}" -reconfigure
      workingDirectory: ${{parameters.TfWorkingDirectory}}
  - task: CmdLine@2
    displayName: Terraform Apply
    inputs:
      script: "terraform apply -auto-approve -input=false tfplan"
      workingDirectory: ${{parameters.TfWorkingDirectory}}
  - ${{if parameters.TfOutputVars}}:
      - ${{ each tfVar in parameters.TfOutputVars }}:
        - pwsh: echo "##vso[task.setvariable variable=${{ tfVar }};isOutput=true]$(terraform output -raw ${{ tfVar }})"
          name: "tf_var_${{ tfVar }}"
          workingDirectory: ${{parameters.TfWorkingDirectory}}